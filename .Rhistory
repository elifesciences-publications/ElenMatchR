scale_x_continuous(trans="log2", breaks=2^(0:14)) +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("figures/CV_curves.pdf", device="pdf", height=4, width=4, useDingbats=F)
Nice.Table(CVerror %>% group_by(Data) %>% filter(Error==min(Error)))
do.call(rbind, lapply(names(CV), function(x) data.frame(Error=CV[[x]]$error.cv) %>% rownames_to_column("nFeature") %>% mutate(Data=x))) %>%
as.tibble() %>%
mutate(nFeature=as.numeric(nFeature)) -> CVerror
CVerror
ggplot(CVerror, aes(x=nFeature, y=Error, group=Data, color=Data)) +
geom_line() +
geom_point() +
theme_classic() +
theme(legend.position=c(0.8, 0.8)) +
xlab("# features") +
ylab("cross-validation error rate (%)") +
#scale_x_continuous(breaks=seq(0,15000,2000))
scale_x_continuous(trans="log2", breaks=2^(0:14)) +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("figures/CV_curves.pdf", device="pdf", height=4, width=4, useDingbats=F)
Nice.Table(CVerror %>% group_by(Data) %>% filter(Error==min(Error)))
CVerror
Nice.Table(CVerror %>% group_by(Data) %>% filter(Error==min(Error)))
iform<-function(tab, feat, type){tab %>% as.data.frame() %>% rownames_to_column("Feature") %>% as.tibble() %>% arrange(desc(MeanDecreaseGini))  %>% top_n(feat, MeanDecreaseGini) %>% mutate(Data=type)}
taxonomy<-read_tsv("../../OTUtabs/97_otu_taxonomy.txt", col_names=F) %>%
rename(OTU=X1, taxonomy=X2) %>%
mutate(taxonomy=gsub("[kpcofgs]__","", taxonomy) %>% gsub(" ","", .))
bind_cols(taxonomy, str_split(taxonomy$taxonomy, ";", simplify=T) %>% as.tibble()) %>%
select(-taxonomy) -> taxonomy
colnames(taxonomy)<-c("OTU","Kingdom","Phylum","Class","Order","Family","Genus","Species")
taxonomy %>% as.data.frame() %>% column_to_rownames("OTU") ->taxonomy
impfeats<-do.call(rbind,
list(
OTU=readRDS("RDS/FEATS_OTUs.RDS")$importance %>% iform(., 1045, "OTU"),
PICRUSt=readRDS("RDS/FEATS_PICRUSt.RDS")$importance%>% iform(., 797, "PICRUSt"),
PhILR=readRDS("RDS/FEATS_PHILR.RDS")$importance%>% iform(., 796, "PhILR")
))
View(CVerror)
tab="PHILR"
CV<-randomForest::rfcv(t(get(tab)[,samples]), conds, cv.fold=10, ntree=1000)
message(PHILR[1:10,1:10])
write_tsv(PHILR[1:10,1:10], "~/Desktop/philrtest.txt")
class(PHILR[1:10,1:10])
write_tsv(PHILR[1:10,1:10]%>%as.data.frame, "~/Desktop/philrtest.txt")
write.table(PHILR[1:10,1:10]%>%as.data.frame, "~/Desktop/philrtest.txt")
metadata<-read_tsv("mouse_metadata.tsv")
setwd(WRKDIR)
WRKDIR<-"/turnbaugh/qb3share/jbisanz/HFD_metastudy/Analysis_Mar2018/Main_analysis/"
setwd(WRKDIR)
metadata<-read_tsv("../Main_analysis/mouse_metadata.tsv")
metadata
lm(StudyID~DietName, data=metadata)
lm(StudyID~DietName, data=metadata %>% filter(!is.na(DietName)))
library(car)
install.packages("car")
?car::vif
car::vif(lm(StudyID~Diet_Type, data=metadata))
metadata$Diet_Type
car::vif(lm(StudyID~Diet_Type, data=metadata))
car::vif(glm(StudyID~Diet_Type, data=metadata))
car::vif(glm(StudyID~Diet_Type, data=metadata, family=binomial(link="logit")))
?glm
car::vif(glm(StudyID~Diet_Type, data=metadata, family=binomial(link="logit")))
glm(StudyID~Diet_Type, data=metadata, family=binomial(link="logit"))
glm(StudyID~Diet_Type, data=metadata, family=binomial(link="probit"))
metadata$StudyID
glm(StudyID~Diet_Type, data=metadata, family=binomial)
glm(Diet_Type~StudyID, data=metadata, family=binomial)
Diet_Type
metadata$Diet_Type
as.numeric(metadata$Diet_Type)
?chisq.test
chisq(metadata$StudyID, metadata$Fat)
chisq.test(metadata$StudyID, metadata$Fat)
chisq.test(metadata$StudyID, metadata$Diet_Type)
perStudy<-readRDS("RDS/perStudy.RDS")
ggplot() +
geom_line(data=graphDF, aes(x=x, y=y, group = id), color="grey", alpha=0.4) +
geom_point(data=vertDF, aes(x,y, fill = log2FC, size = log2(MeanDecreaseGini), shape=Type), color="grey80") +
geom_text(data=subset(vertDF, Type=="Pathway"), aes(x,y, label = value), size = 2, hjust = 0, vjust=1) +
coord_equal() +
scale_fill_gradientn(colors=c("cornflowerblue", "white", "indianred", "darkred")) +
theme_minimal() +
theme(axis.text.x=element_blank(), axis.text.y=element_blank(),axis.ticks=element_blank()) +
theme(axis.title.x=element_blank(),axis.title.y=element_blank()) +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank()) +
scale_shape_manual(values=c(21, 23))
iform<-function(tab, feat, type){tab %>% as.data.frame() %>% rownames_to_column("Feature") %>% as.tibble() %>% arrange(desc(MeanDecreaseGini))  %>% top_n(feat, MeanDecreaseGini) %>% mutate(Data=type)}
taxonomy<-read_tsv("../../OTUtabs/97_otu_taxonomy.txt", col_names=F) %>%
rename(OTU=X1, taxonomy=X2) %>%
mutate(taxonomy=gsub("[kpcofgs]__","", taxonomy) %>% gsub(" ","", .))
bind_cols(taxonomy, str_split(taxonomy$taxonomy, ";", simplify=T) %>% as.tibble()) %>%
select(-taxonomy) -> taxonomy
colnames(taxonomy)<-c("OTU","Kingdom","Phylum","Class","Order","Family","Genus","Species")
taxonomy %>% as.data.frame() %>% column_to_rownames("OTU") ->taxonomy
impfeats<-do.call(rbind,
list(
OTU=readRDS("RDS/FEATS_OTUs.RDS")$importance %>% iform(., 1045, "OTU"),
PICRUSt=readRDS("RDS/FEATS_PICRUSt.RDS")$importance%>% iform(., 797, "PICRUSt"),
PhILR=readRDS("RDS/FEATS_PHILR.RDS")$importance%>% iform(., 796, "PhILR")
))
PhILRnames<-sapply(subset(impfeats, Data=="PhILR")$Feature, function(x) name.balance(tree.philr, taxonomy, x))
PhILRnames %>% as.data.frame() %>% rownames_to_column("Feature") %>% rename(Annotation=".") -> PhILRnames
Annotations<-
rbind(
taxonomy %>% rownames_to_column("Feature") %>% as.tibble() %>% mutate(Annotation=paste(Kingdom, Phylum, Class, Order,Family,Genus,Species, sep="|")) %>% select(Feature, Annotation),
readRDS("RDS/PICRUSTannots.RDS") %>% rename(Feature=KO, Annotation=KEGG_Description),
PhILRnames
)
impfeats<-impfeats %>% left_join(Annotations)
impfeats
impfeats<-subset(impfeats, Data=="PICRUSt") %>% mutate(log2FC=MeanDiff)
CV<-list(
OTU=readRDS("RDS/CV_OTUs.RDS"),
PICRUSt=readRDS("RDS/CV_PICRUSt.RDS"),
PhILR=readRDS("RDS/CV_PHILR.RDS")
)
do.call(rbind, lapply(names(CV), function(x) data.frame(Error=CV[[x]]$error.cv) %>% rownames_to_column("nFeature") %>% mutate(Data=x))) %>%
as.tibble() %>%
mutate(nFeature=as.numeric(nFeature)) -> CVerror
ggplot(CVerror, aes(x=nFeature, y=Error, group=Data, color=Data)) +
geom_line() +
geom_point() +
theme_classic() +
theme(legend.position=c(0.8, 0.8)) +
xlab("# features") +
ylab("cross-validation error rate (%)") +
#scale_x_continuous(breaks=seq(0,15000,2000))
scale_x_continuous(trans="log2", breaks=2^(0:14)) +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("figures/CV_curves.pdf", device="pdf", height=4, width=4, useDingbats=F)
Nice.Table(CVerror %>% group_by(Data) %>% filter(Error==min(Error)))
CV<-list(
OTU=readRDS("RDS/CV_OTUs.RDS"),
PICRUSt=readRDS("RDS/CV_PICRUSt.RDS"),
PhILR=readRDS("RDS/CV_PHILR.RDS")
)
do.call(rbind, lapply(names(CV), function(x) data.frame(Error=CV[[x]]$error.cv) %>% rownames_to_column("nFeature") %>% mutate(Data=x))) %>%
as.tibble() %>%
mutate(nFeature=as.numeric(nFeature)) -> CVerror
ggplot(CVerror, aes(x=nFeature, y=Error, group=Data, color=Data)) +
geom_line() +
geom_point() +
theme_classic() +
theme(legend.position=c(0.8, 0.8)) +
xlab("# features") +
ylab("cross-validation error rate (%)") +
#scale_x_continuous(breaks=seq(0,15000,2000))
scale_x_continuous(trans="log2", breaks=2^(0:14)) +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("figures/CV_curves.pdf", device="pdf", height=3, width=3, useDingbats=F)
iform<-function(tab, feat, type){tab %>% as.data.frame() %>% rownames_to_column("Feature") %>% as.tibble() %>% arrange(desc(MeanDecreaseGini))  %>% top_n(feat, MeanDecreaseGini) %>% mutate(Data=type)}
taxonomy<-read_tsv("../../OTUtabs/97_otu_taxonomy.txt", col_names=F) %>%
rename(OTU=X1, taxonomy=X2) %>%
mutate(taxonomy=gsub("[kpcofgs]__","", taxonomy) %>% gsub(" ","", .))
bind_cols(taxonomy, str_split(taxonomy$taxonomy, ";", simplify=T) %>% as.tibble()) %>%
select(-taxonomy) -> taxonomy
colnames(taxonomy)<-c("OTU","Kingdom","Phylum","Class","Order","Family","Genus","Species")
taxonomy %>% as.data.frame() %>% column_to_rownames("OTU") ->taxonomy
impfeats<-do.call(rbind,
list(
OTU=readRDS("RDS/FEATS_OTUs.RDS")$importance %>% iform(., 1045, "OTU"),
PICRUSt=readRDS("RDS/FEATS_PICRUSt.RDS")$importance%>% iform(., 797, "PICRUSt"),
PhILR=readRDS("RDS/FEATS_PHILR.RDS")$importance%>% iform(., 796, "PhILR")
))
PhILRnames<-sapply(subset(impfeats, Data=="PhILR")$Feature, function(x) name.balance(tree.philr, taxonomy, x))
tree.philr<-readRDS("RDS/tree.philr.RDS")
PhILRnames<-sapply(subset(impfeats, Data=="PhILR")$Feature, function(x) name.balance(tree.philr, taxonomy, x))
PhILRnames %>% as.data.frame() %>% rownames_to_column("Feature") %>% rename(Annotation=".") -> PhILRnames
Annotations<-
rbind(
taxonomy %>% rownames_to_column("Feature") %>% as.tibble() %>% mutate(Annotation=paste(Kingdom, Phylum, Class, Order,Family,Genus,Species, sep="|")) %>% select(Feature, Annotation),
readRDS("RDS/PICRUSTannots.RDS") %>% rename(Feature=KO, Annotation=KEGG_Description),
PhILRnames
)
impfeats<-impfeats %>% left_join(Annotations)
#Get a measure of change
impfeats$MeanDiff=NA
impfeats$MedianDiff=NA
impfeats$SD=NA
for(i in 1:nrow(impfeats)){
if(impfeats$Data[i]=="OTU"){
data.frame(Abundance=OTUs[impfeats$Feature[i],]) %>%
rownames_to_column("UniqueID") %>%
as.tibble() %>%
left_join(metadata[,c("UniqueID","Diet_Type")]) %>%
group_by(Diet_Type) %>%
summarize_at("Abundance", funs(mean,median,sd,min,max)) ->tmp
impfeats$MeanDiff[i]<-tmp$mean[1]-tmp$mean[2]
impfeats$MedianDiff[i]<-tmp$median[1]-tmp$median[2]
impfeats$SD[i]<-sqrt(tmp$sd[1]^2 + tmp$sd[2]^2)
}else if(impfeats$Data[i]=="PhILR"){
data.frame(Abundance=PHILR[impfeats$Feature[i],]) %>%
rownames_to_column("UniqueID") %>%
as.tibble() %>%
left_join(metadata[,c("UniqueID","Diet_Type")]) %>%
group_by(Diet_Type) %>%
summarize_at("Abundance", funs(mean,median,sd,min,max)) ->tmp
impfeats$MeanDiff[i]<-tmp$mean[1]-tmp$mean[2]
impfeats$MedianDiff[i]<-tmp$median[1]-tmp$median[2]
impfeats$SD[i]<-sqrt(tmp$sd[1]^2 + tmp$sd[2]^2)
}else if(impfeats$Data[i]=="PICRUSt"){
data.frame(Abundance=PICRUSt[impfeats$Feature[i],]) %>%
rownames_to_column("UniqueID") %>%
as.tibble() %>%
left_join(metadata[,c("UniqueID","Diet_Type")]) %>%
group_by(Diet_Type) %>%
summarize_at("Abundance", funs(mean,median,sd,min,max)) ->tmp
impfeats$MeanDiff[i]<-tmp$mean[1]-tmp$mean[2]
impfeats$MedianDiff[i]<-tmp$median[1]-tmp$median[2]
impfeats$SD[i]<-sqrt(tmp$sd[1]^2 + tmp$sd[2]^2)
}
}
write_tsv(impfeats, "ImportantFeatures.txt")
Nice.Table(impfeats)
s<-subset(impfeats, Data=="PICRUSt") %>% mutate(log2FC=MeanDiff)
enrich<-clusterProfiler::enrichKEGG(impfeats$Feature, organism="ko", pAdjustMethod="bonferroni")
as.data.frame(enrich) %>% as.tibble() %>%
filter(p.adjust<0.05) -> pathway.enrich
Nice.Table(pathway.enrich)
d<-as.data.frame(pathway.enrich)
membership<-strsplit(d$geneID, split="/")
names(membership)<-d$ID
membership<-plyr::ldply(membership, data.frame)
colnames(membership)<-c("Pathway","Feature")
membership<-membership %>% left_join(impfeats) %>% left_join(d, by=c("Pathway"="ID"))
#http://kateto.net/network-visualization
#For each node, want: ID  \t  FDR \t log2FoldChange
nodes<-impfeats[c("Feature","log2FC","MeanDecreaseGini")]
nodes$Type<-"Feature"
nodes<-nodes[nodes$Feature %in% unlist(strsplit(d$geneID, split="/")),]
dd<-d
dd$log2FoldChange<-NA
dd<-dd[,c("Description","log2FoldChange","p.adjust")]
dd$Type<-"Pathway"
colnames(dd)<-colnames(nodes)
nodes<-rbind(nodes, dd)
nodes<-nodes
links<-membership[,c("Description","Feature")]
net <- igraph::graph_from_data_frame(d=links, vertices=nodes, directed=F)
#plot_network(net) #using phyloseq's code
g<-net
edgeDF <- data.frame(igraph::get.edgelist(g))
edgeDF$id <- 1:length(edgeDF[, 1])
vertDF <- igraph::layout.auto(g)
colnames(vertDF) <- c("x", "y")
vertDF <- data.frame(value = igraph::get.vertex.attribute(g, "name"),
vertDF)
#extraData = nodes[as.character(vertDF$value), drop = FALSE]
#vertDF <- data.frame(vertDF, extraData)
vertDF<-vertDF %>% left_join(nodes, by=c("value"="Feature"))
graphDF <- merge(reshape2::melt(edgeDF, id = "id"), vertDF,
by = "value")
point_size="MeanDecreaseGini"
color="log2FC"
# vertDF$FDR.Colonization[vertDF$Type=="Pathway"]=0.001
#vertDF$log2FoldChange[vertDF$log2FoldChange>6]=6
#vertDF$log2FoldChange[vertDF$log2FoldChange<(-6)]=-6
vertDF<-vertDF %>% mutate(MeanDecreaseGini=if_else(Type=="Pathway", 12.5, MeanDecreaseGini))
ggplot() +
geom_line(data=graphDF, aes(x=x, y=y, group = id), color="grey", alpha=0.4) +
geom_point(data=vertDF, aes(x,y, fill = log2FC, size = log2(MeanDecreaseGini), shape=Type), color="grey80") +
geom_text(data=subset(vertDF, Type=="Pathway"), aes(x,y, label = value), size = 2, hjust = 0, vjust=1) +
coord_equal() +
scale_fill_gradientn(colors=c("cornflowerblue", "white", "indianred", "darkred")) +
theme_minimal() +
theme(axis.text.x=element_blank(), axis.text.y=element_blank(),axis.ticks=element_blank()) +
theme(axis.title.x=element_blank(),axis.title.y=element_blank()) +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank()) +
scale_shape_manual(values=c(21, 23))
ggsave("figures/RFpicrust.pdf", device="pdf", width=8, height=8, useDingbats=F)
enrich
pathway.enrich
d<-as.data.frame(pathway.enrich)
membership<-strsplit(d$geneID, split="/")
names(membership)<-d$ID
membership<-plyr::ldply(membership, data.frame)
colnames(membership)<-c("Pathway","Feature")
membership<-membership %>% left_join(impfeats) %>% left_join(d, by=c("Pathway"="ID"))
#http://kateto.net/network-visualization
#For each node, want: ID  \t  FDR \t log2FoldChange
nodes<-impfeats[c("Feature","log2FC","MeanDecreaseGini")]
colnames(impfeats)
impfeats<-subset(impfeats, Data=="PICRUSt") %>% mutate(log2FC=MeanDiff)
enrich<-clusterProfiler::enrichKEGG(impfeats$Feature, organism="ko", pAdjustMethod="bonferroni")
as.data.frame(enrich) %>% as.tibble() %>%
filter(p.adjust<0.05) -> pathway.enrich
Nice.Table(pathway.enrich)
impfeats
pathway.enrich
enrich<-clusterProfiler::enrichKEGG(impfeats$Feature, organism="ko", pAdjustMethod="bonferroni")
as.data.frame(enrich) %>% as.tibble() %>%
filter(p.adjust<0.05) -> pathway.enrich
Nice.Table(pathway.enrich)
d<-as.data.frame(pathway.enrich)
membership<-strsplit(d$geneID, split="/")
names(membership)<-d$ID
membership<-plyr::ldply(membership, data.frame)
colnames(membership)<-c("Pathway","Feature")
membership<-membership %>% left_join(impfeats) %>% left_join(d, by=c("Pathway"="ID"))
#http://kateto.net/network-visualization
#For each node, want: ID  \t  FDR \t log2FoldChange
nodes<-impfeats[c("Feature","log2FC","MeanDecreaseGini")]
nodes$Type<-"Feature"
nodes<-nodes[nodes$Feature %in% unlist(strsplit(d$geneID, split="/")),]
dd<-d
dd$log2FoldChange<-NA
dd<-dd[,c("Description","log2FoldChange","p.adjust")]
dd$Type<-"Pathway"
colnames(dd)<-colnames(nodes)
nodes<-rbind(nodes, dd)
nodes<-nodes
links<-membership[,c("Description","Feature")]
net <- igraph::graph_from_data_frame(d=links, vertices=nodes, directed=F)
#plot_network(net) #using phyloseq's code
g<-net
edgeDF <- data.frame(igraph::get.edgelist(g))
edgeDF$id <- 1:length(edgeDF[, 1])
vertDF <- igraph::layout.auto(g)
colnames(vertDF) <- c("x", "y")
vertDF <- data.frame(value = igraph::get.vertex.attribute(g, "name"),
vertDF)
#extraData = nodes[as.character(vertDF$value), drop = FALSE]
#vertDF <- data.frame(vertDF, extraData)
vertDF<-vertDF %>% left_join(nodes, by=c("value"="Feature"))
graphDF <- merge(reshape2::melt(edgeDF, id = "id"), vertDF,
by = "value")
point_size="MeanDecreaseGini"
color="log2FC"
# vertDF$FDR.Colonization[vertDF$Type=="Pathway"]=0.001
#vertDF$log2FoldChange[vertDF$log2FoldChange>6]=6
#vertDF$log2FoldChange[vertDF$log2FoldChange<(-6)]=-6
vertDF<-vertDF %>% mutate(MeanDecreaseGini=if_else(Type=="Pathway", 12.5, MeanDecreaseGini))
ggplot() +
geom_line(data=graphDF, aes(x=x, y=y, group = id), color="grey", alpha=0.4) +
geom_point(data=vertDF, aes(x,y, fill = log2FC, size = log2(MeanDecreaseGini), shape=Type), color="grey80") +
geom_text(data=subset(vertDF, Type=="Pathway"), aes(x,y, label = value), size = 2, hjust = 0, vjust=1) +
coord_equal() +
scale_fill_gradientn(colors=c("cornflowerblue", "white", "indianred", "darkred")) +
theme_minimal() +
theme(axis.text.x=element_blank(), axis.text.y=element_blank(),axis.ticks=element_blank()) +
theme(axis.title.x=element_blank(),axis.title.y=element_blank()) +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank()) +
scale_shape_manual(values=c(21, 23))
ggsave("figures/RFpicrust.pdf", device="pdf", width=8, height=8, useDingbats=F)
PHILR<-readRDS("RDS/PHILR.RDS")
PHILR<-PHILR[-1,] #strip first row
samples<-metadata %>% filter(Task=="Murine_Training_Study") %>% pull(UniqueID)
conds<-metadata %>% filter(Task=="Murine_Training_Study") %>% pull(Diet_Type)
metadata
metadata<-readRDS("RDS/metadata.RDS")
samples<-metadata %>% filter(Task=="Murine_Training_Study") %>% pull(UniqueID)
conds<-metadata %>% filter(Task=="Murine_Training_Study") %>% pull(Diet_Type)
samples
conds
CV<-randomForest::rfcv(t(get(tab)[,samples]), conds, cv.fold=10, ntree=1000)
tab
CV<-randomForest::rfcv(t(get(tab)[,samples]), conds, cv.fold=10, ntree=1000)
CV<-randomForest::rfcv(t(get(tab)[,samples]), conds, cv.fold=10, ntree=10)
CV<-randomForest::rfcv(t(get(tab)[,samples]), conds, cv.fold=10, ntree=1)
CV
feats<-randomForest::randomForest(t(get(tab)[,samples]), conds, ntree=1, importance=T)
feats
View(feats)
CV<-list(
OTU=readRDS("RDS/CV_OTUs.RDS"),
PICRUSt=readRDS("RDS/CV_PICRUSt.RDS"),
PhILR=readRDS("RDS/CV_PHILR.RDS")
)
do.call(rbind, lapply(names(CV), function(x) data.frame(Error=CV[[x]]$error.cv) %>% rownames_to_column("nFeature") %>% mutate(Data=x))) %>%
as.tibble() %>%
mutate(nFeature=as.numeric(nFeature)) -> CVerror
ggplot(CVerror, aes(x=nFeature, y=Error, group=Data, color=Data)) +
geom_line() +
geom_point() +
theme_classic() +
theme(legend.position=c(0.8, 0.8)) +
xlab("# features") +
ylab("cross-validation error rate (%)") +
#scale_x_continuous(breaks=seq(0,15000,2000))
scale_x_continuous(trans="log2", breaks=2^(0:14)) +
theme(axis.text.x=element_text(angle=45, hjust=1))
t<-read_tsv("../Main_analysis/mouse_metadata.tsv")
t
t %>% group_by(StudyID) %>% summarize_all(funs(function(x){paste(x, collapse=", ")}))
t %>% group_by(StudyID) %>% select(-UniqueID) summarize_all(funs(function(x){paste(x, collapse=", ")}))
t %>% group_by(StudyID) %>% select(-UniqueID) %>% summarize_all(funs(function(x){paste(x, collapse=", ")}))
t %>% group_by(StudyID) %>% summarize(Nsample=length(UniqueUD))
t %>% group_by(StudyID) %>% summarize(Nsample=length(UniqueID))
t %>% group_by(StudyID) %>% summarize(Nsample=length(UniqueID), Platform=)
pastemeta<-function(x){paste(x, collapse=", ")}
t %>% group_by(StudyID) %>% summarize(Nsample=length(UniqueID), Platform=pastemeta(Platform))
pastemeta<-function(x){paste(unique(x), collapse=", ")}
t %>% group_by(StudyID) %>% summarize(Nsample=length(UniqueID), Platform=pastemeta(Platform))
t %>% group_by(StudyID) %>% summarize(Nsample=length(UniqueID), Platform=pastemeta(Platform), Diets=pastemeta(Diets))
t %>% group_by(StudyID) %>% summarize(Nsample=length(UniqueID), Platform=pastemeta(Platform), Diets=pastemeta(Diet))
t %>% group_by(StudyID) %>% summarize(Nsample=length(UniqueID), Platform=pastemeta(Platform), Diets=pastemeta(DietName))
t %>% group_by(StudyID) %>% summarize(Nsample=length(UniqueID), Platform=pastemeta(Platform), Diets=pastemeta(DietName), VariableRegion=pastemeta(VariableRegion))
t %>% group_by(StudyID) %>% summarize(Nsample=length(UniqueID), Platform=pastemeta(Platform), Diets=pastemeta(DietName), VariableRegion=pastemeta(VariableRegion), Strains=pastemeta(Strain))
colnames(metadata)
colnames(t)
t %>% group_by(StudyID) %>% summarize(Nsample=length(UniqueID), nHFD=sum(Diet_Type=="HFD") Platform=pastemeta(Platform), Diets=pastemeta(DietName), VariableRegion=pastemeta(VariableRegion), Strains=pastemeta(Strain))
t %>% group_by(StudyID) %>% summarize(Nsample=length(UniqueID), nHFD=sum(Diet_Type=="HFD"), Platform=pastemeta(Platform), Diets=pastemeta(DietName), VariableRegion=pastemeta(VariableRegion), Strains=pastemeta(Strain))
t %>% group_by(StudyID) %>% summarize(Nsample=length(UniqueID), nHFD=sum(Diet_Type=="HFD"), nLFD=sum(Diet_Type=="LFD"), Platform=pastemeta(Platform), Diets=pastemeta(DietName), VariableRegion=pastemeta(VariableRegion), Strains=pastemeta(Strain))
t %>% group_by(StudyID) %>% summarize(Nsample=length(UniqueID), nHFD=sum(Diet_Type=="HFD"), nLFD=sum(Diet_Type=="LFD"), Platform=pastemeta(Platform), Diets=pastemeta(DietName), VariableRegion=pastemeta(VariableRegion), Strains=pastemeta(Strain)) %>% write_tsv("~/Desktop/metadata.txt")
library(tidyverse)
library(readxl)
library(stringr)
library(data.table)
library(doParallel)
library(ggtern)
library(MicrobeR)
library(vegan)
library(phyloseq)
library(philr)
library(ape)
library(picante)
WRKDIR<-"/turnbaugh/qb3share/jbisanz/HFD_metastudy/Analysis_Mar2018/Main_analysis/"
FIGDIR<-"/turnbaugh/qb3share/jbisanz/HFD_metastudy/Analysis_Mar2018/Main_analysis/Figs/"
#setwd(WRKDIR)
dir.create(FIGDIR)
forkclust<-makeForkCluster(12)
registerDoParallel(forkclust)
HFDcolor="#E69F00"
LFDcolor="#0072B2"
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, tidy=FALSE, cache=TRUE)
sessionInfo()
setwd(WRKDIR)
shiny::runApp('~/Research/repositories/ElenMatchR')
knitr::opts_chunk$set(echo = TRUE, message=TRUE, warning=FALSE, tidy=FALSE, cache=TRUE)
library(Biostrings)
library(Rsamtools)
library(msa)
library(ape)
library(clusterProfiler)
library(pathview)
library(pvclust)
library(phangorn)
library(ggtree)
library(ggseqlogo)
library(ggdendro)
library(gplots)
#library(BSgenome)
library(gggenes)
#library(colorRamps)
library(data.table)
library(readxl)
library(tidyverse)
library(rworldmap)
library(ggmap)
print(sessionInfo())
tetr<-read_tsv("~/Research/repositories/ElenMatchR/Phenotypes.txt")
tetr
tetr<-read_tsv("~/Research/repositories/ElenMatchR/Phenotypes.txt") %>% filter(!is.na(Tetracycline))
tetr
tetr<-read_tsv("~/Research/repositories/ElenMatchR/Phenotypes.txt", skip=1) %>% filter(!is.na(Tetracycline_Resistance))
tetr
gene_matrix<-fread("../po5/outs/pid60_cov80.proteinortho")
setwd("/Volumes/turnbaughlab/qb3share/jbisanz/Eggerthella_Genomes_2018/manuscript/")
gene_matrix<-fread("../po5/outs/pid60_cov80.proteinortho")
gene_matrix
colnames(gene_matrix)<-gsub("\\.faa","", colnames(gene_matrix))
gene_matrix[,tetr$Genome_ID]
tetr$Genome_ID
gene_matrix<-gene_matrix[,tetr$Genome_ID]
dim(gene_matrix)
gene_matrix
tetr<-read_tsv("~/Research/repositories/ElenMatchR/Phenotypes.txt", skip=1) %>% filter(!is.na(Tetracycline_Resistance))
gene_matrix<-fread("../po5/outs/pid60_cov80.proteinortho")
colnames(gene_matrix)<-gsub("\\.faa","", colnames(gene_matrix))
colnames(gene_matrix)
tetr$Genome_ID
gene_matrix<-subset(gene_matrix,,colnames(gene_matrix) %in% tetr$Genome_ID) #limit to only strains with phenotypes
rcounts<-apply(gene_matrix, 1, function(x) sum(x=="*")) #remove uninformative clusters(ie absent in all, or present in all)
tetr<-read_tsv("~/Research/repositories/ElenMatchR/Phenotypes.txt", skip=1) %>% filter(!is.na(Tetracycline_Resistance))
gene_matrix<-fread("../po5/outs/pid60_cov80.proteinortho")
colnames(gene_matrix)<-gsub("\\.faa","", colnames(gene_matrix))
gene_matrix<-subset(gene_matrix,,colnames(gene_matrix) %in% tetr$Genome_ID) #limit to only strains with phenotypes
rcounts<-apply(gene_matrix, 1, function(x) sum(x=="*")) #remove uninformative clusters(ie absent in all, or present in all)
gene_matrix<-gene_matrix[rcounts>0 & rcounts<ncol(gene_matrix),]
gene_matrix_bin<-apply(gene_matrix, 2, function(x) if_else(x=="*",0,1)) #create a binary version of table
rownames(gene_matrix_bin)<-apply(gene_matrix_bin,1, function(x) paste(x, collapse="|"))
gene_matrix$group<-rownames(gene_matrix_bin)
gene_matrix$OG<-paste0("OG_", 1:nrow(gene_matrix))
gene_matrix_bin<-gene_matrix_bin[!duplicated(rownames(gene_matrix_bin)),] #dereplicate
rf<-randomForest::randomForest(t(gene_matrix_bin), factor(res[match(colnames(gene_matrix_bin), res$Strain),]$Resistance), ntree=1000, importance=T)
tetr[match(colnames(gene_matrix_bin), tetr$Genome_ID),]
rf<-randomForest::randomForest(t(gene_matrix_bin), factor(tetr[match(colnames(gene_matrix_bin), tetr$Genome_ID),]$Tetracycline_Resistance), ntree=1000, importance=T)
importance<-rf$importance %>%
as.data.frame() %>%
rownames_to_column("group") %>%
arrange(desc(MeanDecreaseGini)) %>%
top_n(10, MeanDecreaseGini)
results<-importance %>% left_join(gene_matrix) %>% mutate(OG=factor(OG, levels=rev(OG)))
ggplot(results, aes(x=OG, y=MeanDecreaseGini)) +
#geom_point(shape=21, color="black", fill="indianred") +
geom_bar(fill="indianred", stat="identity", color="black") +
scale_y_continuous(limits=c(0,0.6),expand=c(0,0)) +
coord_flip() +
theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
xlab("Gene Ortholog Group")
results<-importance %>% left_join(gene_matrix) %>% mutate(OG=factor(OG, levels=rev(OG)))
ggplot(results, aes(x=OG, y=MeanDecreaseGini)) +
#geom_point(shape=21, color="black", fill="indianred") +
geom_bar(fill="indianred", stat="identity", color="black") +
#scale_y_continuous(limits=c(0,0.6),expand=c(0,0)) +
coord_flip() +
theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
xlab("Gene Ortholog Group")
ggsave("../plots/RFimportance.pdf", device="pdf", width=2, height=3, useDingbats=F)
runApp('~/Research/repositories/ElenMatchR')
